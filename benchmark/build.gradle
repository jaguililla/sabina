/*
 * Copyright © 2015 Juan José Aguililla. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

description = "Sinatra web framework's benchmark"

dependencies {
    compile project(':extra')

    compile 'com.mchange:c3p0:0.9.2.1'
    compile 'mysql:mysql-connector-java:5.1.28'

    testCompile 'org.apache.httpcomponents:fluent-hc:4.4'
}

javadoc {
    failOnError = false
}

check << {
    stressTestReport ()
}

def stressTestReport () {
    def file = "$buildDir/test-results/TEST-sabina.benchmark.ApplicationTest.xml"
    def parser = new groovy.util.XmlSlurper()
    def testsuite = parser.parse (file)

    testsuite.testcase
        .collect {                                        // Collect values
        [
            it.@classname.text() + '.' + it.@name.text(),
            it.@time.text() as double
        ]
    }
    .groupBy { it[0] }                                    // Group by test name
        .collect {
        [
            it.key,
            it.value.collect { it[1] }
        ]
    }
    .collect {
        [
            it[0],
            it[1],
            it[1].size (),
            it[1].max (),
            it[1].min (),
            it[1].sum (),
            it[1].sum () / it[1].size ()
        ]
    }
    .each {
        println ("${it[0].padLeft 60} : ${it[2]}, ${it[3].toString().padRight (5, '0')}, ${it[4].toString().padRight (5, '0')}, ${it[5]}, ${it[6]}")
    }
}
