/*
 * Copyright © 2015 Juan José Aguililla. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

subprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    apply plugin: 'java'
    apply plugin: 'groovy'

    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

/*
 * These properties are defined in 'gradle.properties'
 */
    group = projectGroup
    version = projectVersion
    description = projectDescription

// TODO To be completed
//processResources {
//    filesMatching('**/config.properties') {
//        filter {
//            it.replace('localhost', project.property('myhost'))
//        }
//    }
//}

    repositories {
        jcenter ()
    }

    configurations {
        deployerJars
    }

    test {
        useTestNG ()
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // Coveralls plugin depends on xml format report
            html.enabled = true
        }
    }

    task sourceJar (type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            mavenJava (MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier 'sources'
                }
            }
        }
        repositories {
            maven {
                url bintrayUrl
                credentials {
                    // Set 'bintrayKey' in '~/.gradle/gradle.properties'
                    def hasBintrayKey = project.hasProperty ("${project.name}BintrayKey")
                    def bintrayKey = hasBintrayKey?
                        project.property ("${project.name}BintrayKey") : "UNDEFINED"

                    username bintrayUser
                    password bintrayKey
                }
            }
        }
    }
}
