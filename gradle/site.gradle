/*
 * To apply this script, you need to add the JBake plugin manually at the top of your build script
 * as that is not possible in included scripts like this one. These are the required lines to do so:
 *
 * buildscript {
 *     repositories {
 *         jcenter ()
 *     }
 *
 *     dependencies {
 *         classpath 'org.freemarker:freemarker:2.3.19'
 *         classpath 'org.pegdown:pegdown:1.4.2'
 *         classpath 'org.asciidoctor:asciidoctorj:1.5.2'
 *     }
 * }
 *
 * plugins {
 *     id 'me.champeau.jbake' version '0.2'
 * }
 */

apply plugin: 'me.champeau.jbake'

task wipe << {
    delete ".gradle"
    delete "$buildDir"
}

jbake {
    input = file("$project.projectDir/$projectSite")
    output = file("$buildDir/$projectSite")
    version = '2.4.0'

    configuration['project.version'] = project.version
    configuration['site.host'] = 'http://there4.co/sabina'

//    configuration['render.index'] = false
    configuration['render.tags'] = false
    configuration['render.archive'] = false
    configuration['render.feed'] = false
    configuration['render.sitemap'] = true

    configuration['template.index.file'] = 'index.gsp'
    configuration['template.archive.file'] = 'archive.gsp'
    configuration['template.sitemap.file'] = 'sitemap.gsp'
    configuration['template.post.file'] = 'post.gsp'
    configuration['template.page.file'] = 'page.gsp'
    configuration['template.feed.file'] = 'feed.gsp'

    // Custom properties
    configuration['bootstrapcdn'] = 'http://netdna.bootstrapcdn.com'
    configuration['cloudflare'] = 'http://cdnjs.cloudflare.com/ajax/libs'
    configuration['googlefonts'] = 'http://fonts.googleapis.com/css?family'
}

task site (dependsOn: 'jbake') {
    /*
     * This will be deprecated when JBake filters content with configuration properties
     */
    doLast {
        file ("$buildDir/${projectSite}/").renameTo (file ("$buildDir/${projectSite}.orig/"))
        copy {
            from "$buildDir/${projectSite}.orig/"
            into "$buildDir/$projectSite"
            include ('**')
        }
        copy {
            from "$buildDir/${projectSite}.orig/"
            into "$buildDir/$projectSite"
            include ('**/*.html')
            filter {ln -> ln.replace ('${config.projectVersion}', project.version)}
        }
        delete "$buildDir/${projectSite}.orig/"
    }

    subprojects.each { module ->
        copy {
            from "$module.name/build/docs/javadoc/"
            into "$buildDir/$projectSite/$module.name/javadoc"
            include ('**')
        }
        copy {
            from "$module.name/build/reports/jacoco/test/html/"
            into "$buildDir/$projectSite/$module.name/jacoco"
            include ('**')
        }
        copy {
            from "$module.name/build/reports/tests/"
            into "$buildDir/$projectSite/$module.name/tests"
            include ('**')
        }
    }
}

