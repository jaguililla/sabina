/*
 * Copyright © 2014 Juan José Aguililla. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

buildscript {
    repositories {
        jcenter ()
    }

    dependencies {
        classpath 'org.freemarker:freemarker:2.3.19'
        classpath 'org.pegdown:pegdown:1.4.2'
        classpath 'org.asciidoctor:asciidoctorj:1.5.2'
    }
}

plugins {
    id 'me.champeau.jbake' version '0.2'
    id 'org.ajoberstar.github-pages' version '1.1.0-milestone.1'
    id "com.github.kt3k.coveralls" version "2.3.1"
}

apply from: 'https://raw.githubusercontent.com/jamming/dotfiles/master/gradle/wrapper.gradle'

subprojects {
    apply from: 'https://raw.githubusercontent.com/jamming/dotfiles/master/gradle/java.gradle'
    apply from: 'https://raw.githubusercontent.com/jamming/dotfiles/master/gradle/bintray.gradle'

    dependencies {
        testCompile 'org.apache.httpcomponents:httpclient:4.3.3'
        testCompile 'org.testng:testng:6.8.21'
    }
}

def projectSite = 'site'

jbake {
    input = file("$project.projectDir/$projectSite")
    output = file("$buildDir/$projectSite")
    configuration['projectVersion'] = projectVersion
}

task wipe {
    delete "$buildDir"
    delete ".gradle"
    delete "*.log"
    delete "log?"
}

task site (dependsOn: 'jbake') {
    /*
     * This will be deprecated when JBake filters content with configuration properties
     */
    doLast {
        file ("$buildDir/${projectSite}/").renameTo (file ("$buildDir/${projectSite}.orig/"))
        copy {
            from "$buildDir/${projectSite}.orig/"
            into "$buildDir/$projectSite"
            include ('**')
            filter {ln -> ln.replace ('${config.projectVersion}', projectVersion)}
        }
    }

    subprojects.each { module ->
        copy {
            from "$module.name/build/docs/javadoc/"
            into "$buildDir/$projectSite/$module.name/javadoc"
            include ('**')
        }
        copy {
            from "$module.name/build/reports/jacoco/test/html/"
            into "$buildDir/$projectSite/$module.name/jacoco"
            include ('**')
        }
        copy {
            from "$module.name/build/reports/tests/"
            into "$buildDir/$projectSite/$module.name/tests"
            include ('**')
        }
    }
}

githubPages {
    repoUri = githubUrl
    pages {
        from (file ("$buildDir/$projectSite")) {
            into '.'
        }
    }
}
